//
//  CartDetailsProtocols.swift
//  Capsula
//
//  Created SherifShokry on 4/3/20.
//  Copyright © 2020 SherifShokry. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit

protocol ViewToPresenterCartDetailsProtocol: class {
    var view : PresenterToViewCartDetailsProtocol? {get set}
    var interactor : PresenterToIntetractorCartDetailsProtocol? {get set}
    var router : PresenterToRouterCartDetailsProtocol? {get set}
    func checkout()
    func checkout(resourcePath : String,paymentMethod : Int)
    func getDevliveryCost()
    func prepareCheckout(paymentMethod: Int)
    func setPreprictionImage(image : String)
    func setInsuranceImage(image : String)
    func setPaymentMethod(method : Int)
    func validateAddress()
}

protocol PresenterToViewCartDetailsProtocol: class {
   func changeState(state : State)
   func moveToSuccessScreen()
   func openPaymentScreen(checkoutID : String,paymentMethod: Int)
   func setDeliveryCost(cost : DeliveryCostResponse)
   func moveToNextScreen()
}

protocol PresenterToIntetractorCartDetailsProtocol: class {
    var presenter: InteractorToPresenterCartDetailsProtocol? { get set }
    func checkout(request: CheckoutRequest)
    func getDeliveryCost()
    func prepareCheckout(paymentMethodID : Int)
    func validateAddress()
}

protocol PresenterToRouterCartDetailsProtocol: class  {
    static func createModule() -> UIViewController
    
}

protocol InteractorToPresenterCartDetailsProtocol: class {
   func deliveryCostFetchedSuccessfully(deliveryCost : DeliveryCostResponse)
   func checkoutIDFetchedSuccessfully(checkoutID : String, paymentMethodID : Int)
   func checkoutDoneSuccessfully()
   func checkoutFailed(error: String)
   func addressValidatedSuccessfully()
}
