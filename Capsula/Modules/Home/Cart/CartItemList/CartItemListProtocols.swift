//
//  CartItemListProtocols.swift
//  Capsula
//
//  Created SherifShokry on 3/29/20.
//  Copyright © 2020 SherifShokry. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit


protocol ViewToPresenterCartItemListProtocol: class {
    
    var view : PresenterToViewCartItemListProtocol? {get set}
    var interactor : PresenterToIntetractorCartItemListProtocol? {get set}
    var router : PresenterToRouterCartItemListProtocol? {get set}
    var numberOfRows : Int { get }
    var itemsData : [Item] {set get}
    func configureCartCell(cell : CartITemCell , indexPath : IndexPath)
    func viewDidLoad()
    func emptyList()
    func deleteItem(indexPath: IndexPath)
    func validateCartItems()
    
}

protocol PresenterToViewCartItemListProtocol: class {
   func changeState(state : State)
    func reloadTableView()
    func setNumberOfItemsLabel(numberOfItems :Int)
    func setTotalPrice(totalPrice : Double)
    func navigateToCartDetails()
}

protocol PresenterToIntetractorCartItemListProtocol: class {
    var presenter: InteractorToPresenterCartItemListProtocol? { get set }
     func addItems(itemsData : [Item])
     func updateItem(item : Item)
     func deleteItem(itemId : Int)
     func deleteAll()
     func validateItems()
}

protocol PresenterToRouterCartItemListProtocol: class  {
    static func createModule() -> UIViewController
    
}

protocol InteractorToPresenterCartItemListProtocol: class {
     func  itemsDataFetchedSuccessfully(itemsResponse: [Item])
     func itemsDataFailedToFetch(error : String)
     func itemsDeletedSuccessfully()
     func itemsValidatedSuccessfully()
}
