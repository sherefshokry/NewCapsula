//
//  CategoriesListProtocols.swift
//  Capsula
//
//  Created SherifShokry on 2/7/20.
//  Copyright © 2020 SherifShokry. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit

protocol ViewToPresenterCategoriesListProtocol: class {
    
    var view : PresenterToViewCategoriesListProtocol? {get set}
    var interactor : PresenterToIntetractorCategoriesListProtocol? {get set}
    var router : PresenterToRouterCategoriesListProtocol? {get set}
    var numberOfRows : Int { get }
    var  page : Int { get }
    var storeId : Int {set get}
    func configureCategoryCell(cell : CategoryCell , indexPath : IndexPath)
    func getCategoriesData()
    func didSelectCategory(indexPath : IndexPath)
    func loadPagingData(indexPath : IndexPath)
    func swipeToRefresh()
}

protocol PresenterToViewCategoriesListProtocol: class {
   func changeState(state : State)
}

protocol PresenterToIntetractorCategoriesListProtocol: class {
    var presenter: InteractorToPresenterCategoriesListProtocol? { get set }
    func getCategoriesData(page : Int)
    func getCategoriesData(storeId : Int,page: Int)
    func  emptyAllList()
}

protocol PresenterToRouterCategoriesListProtocol: class  {
    static func createModule() -> UIViewController
    static func createModule(storeId : Int) -> UIViewController
    func openItemsScreen(from sourceView: PresenterToViewCategoriesListProtocol?, category: Category,storeId : Int)
}

protocol InteractorToPresenterCategoriesListProtocol: class {
   func  categoriesDataFetchedSuccessfully(categoriesResponse: [Category])
   func  categoriesDataFailedToFetch(error : String)
   func stopPagination()
}
