//
//  ItemDetailsInteractor.swift
//  Capsula
//
//  Created SherifShokry on 3/28/20.
//  Copyright © 2020 SherifShokry. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Moya
class ItemDetailsInteractor : PresenterToIntetractorItemDetailsProtocol {
  
    
    var presenter: InteractorToPresenterItemDetailsProtocol?
       private let cartProvider = MoyaProvider<CartDataSource>()
    
    func addItemsToCart(itemData : Item){
          var cartItemsList = [CartItem]()
          var cartItem = CartItem()
          cartItem.mainId = itemData.mainId ?? -1
          cartItem.quantity = 1
          cartItemsList.append(cartItem)
            
          cartProvider.request(.addCart(cartItemsList)) { [weak self] result in
              guard let self = self else { return }
                  switch result {
                              case .success(let response):
                                     do {
                              let itemsResponse = try response.map(BaseResponse<ItemsResponse>.self)
                              self.presenter?.itemsDataAddedToCartSuccessfully(itemsResponse: itemsResponse.data?.itemsList ?? [])
                                     } catch(let catchError) {
                                         self.presenter?.itemsDataFailedToFetch(error: catchError.localizedDescription)
                                     }
                                 case .failure(let error):
                                     do{
                                         if let body = try error.response?.mapJSON(){
                                             let errorData = (body as! [String:Any])
                                             self.presenter?.itemsDataFailedToFetch(error: (errorData["errors"] as? String) ?? "")
                                         }
                                     }catch{
                                         self.presenter?.itemsDataFailedToFetch(error: error.localizedDescription)
                                     }
                                 }
                             }
           }
      
    
    

}

