//
//  SearchItemProtocols.swift
//  Capsula
//
//  Created SherifShokry on 2/24/20.
//  Copyright © 2020 SherifShokry. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//
import Foundation
import UIKit

protocol ViewToPresenterSearchItemProtocol: class {
    var view : PresenterToViewSearchItemProtocol? {get set}
    var interactor : PresenterToIntetractorSearchItemProtocol? {get set}
    var router : PresenterToRouterSearchItemProtocol? {get set}
    var  numberOfRows : Int { get }
    var  page : Int { get }
    func configureItemCell(cell : ItemCell , indexPath : IndexPath)
    func setSearchText(searchText : String)
    func setFilterType(type : Int)
    func itemsSearch()
    func didSelectItem(indexPath : IndexPath)
    func loadPagingData(indexPath : IndexPath)
    func emptyData()
    func swipeToRefresh()
}

protocol PresenterToViewSearchItemProtocol: class {
      func changeState(state : State)
      func showPopup(message : String)
}

protocol PresenterToIntetractorSearchItemProtocol: class {
    var presenter: InteractorToPresenterSearchItemProtocol? { get set }
    func itemsSearch(searchText : String , filterType : Int,page: Int)
    func emptyAllItems()
    func addItemsToCart(itemData : Item)
}

protocol PresenterToRouterSearchItemProtocol: class  {
    static func createModule() -> UIViewController
    func openItemDetailsScreen(from sourceView: PresenterToViewSearchItemProtocol?, item: Item)
}

protocol InteractorToPresenterSearchItemProtocol: class {
   func  itemsDataFetchedSuccessfully(itemsResponse: [Item])
   func  itemsDataFailedToFetch(error : String)
   func  itemsDataAddedToCartSuccessfully(itemsResponse: [Item])
   func stopPagination()
  
}
