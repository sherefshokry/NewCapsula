//
//  StoresListInteractor.swift
//  Capsula
//
//  Created SherifShokry on 2/7/20.
//  Copyright © 2020 SherifShokry. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//
import UIKit
import Moya

class StoresListInteractor : PresenterToIntetractorStoresListProtocol {
    
    var presenter: InteractorToPresenterStoresListProtocol?
    
    private let provider = MoyaProvider<StoresDataSource>()
      
      func getStoresata() {
          provider.request(.getStoresData(1)) { [weak self] result in
               guard let self = self else { return }
               switch result {
               case .success(let response):
                   do {
                    let storesResponse = try response.map(BaseResponse<StoresResponse>.self)
                    self.presenter?.storesDataFetchedSuccessfully(storesResponse: storesResponse.data?.storesList ?? [])
                   } catch(let catchError) {
                       self.presenter?.storesDataFailedToFetch(error: catchError.localizedDescription)
                   }
               case .failure(let error):
                   do{
                       if let body = try error.response?.mapJSON(){
                           let errorData = (body as! [String:Any])
                           self.presenter?.storesDataFailedToFetch(error: (errorData["errors"] as? String) ?? "")
                       }
                   }catch{
                       self.presenter?.storesDataFailedToFetch(error: error.localizedDescription)
                   }
               }
           }
           
       }
      
    
    
}

