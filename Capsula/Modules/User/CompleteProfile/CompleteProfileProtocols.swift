//
//  CompleteProfileProtocols.swift
//  Capsula
//
//  Created SherifShokry on 1/4/20.
//  Copyright © 2020 SherifShokry. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit


protocol ViewToPresenterCompleteProfileProtocol: class {
    
    var view : PresenterToViewCompleteProfileProtocol? {get set}
    var interactor : PresenterToIntetractorCompleteProfileProtocol? {get set}
    var router : PresenterToRouterCompleteProfileProtocol? {get set}
    var user : User {set get}
    var fromApple : Bool {set get}
    func viewDidLoad()
    func setNameField(name : String)
    func setEmailField(email : String)
    func setPhoneFiled(phone : String)
    func checkIfPhoneExist(phone : String)
   
}


protocol PresenterToViewCompleteProfileProtocol: class {
    func setUserData(user : User)
    func changeState(state : State)
    func hideEmail()
}

protocol PresenterToIntetractorCompleteProfileProtocol: class {
    var presenter: InteractorToPresenterCompleteProfileProtocol? { get set }
    func checkIfPhoneExist(phone : String,email : String)
    
}

protocol PresenterToRouterCompleteProfileProtocol: class  {
    static func createModule(user : User,fromApple:  Bool) -> UIViewController
    func openVerificationScreen(from sourceView: PresenterToViewCompleteProfileProtocol?, request : RegisterRequest)
    
}

protocol InteractorToPresenterCompleteProfileProtocol: class {
     func phoneIsExist()
     func phoneNotExist()
}
