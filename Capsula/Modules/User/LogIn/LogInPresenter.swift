//
//  LogInPresenter.swift
//  Capsula
//
//  Created SherifShokry on 12/25/19.
//  Copyright © 2019 SherifShokry. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//
import Foundation

class LogInPresenter : ViewToPresenterLogInProtocol{
  
    var view: PresenterToViewLogInProtocol?
    var interactor: PresenterToIntetractorLogInProtocol?
    var router: PresenterToRouterLogInProtocol?
    var logInRequest = LoginRequest()
    
    func clearLoginRequest(){
        logInRequest = LoginRequest()
    }
    
    
    func setEmailOrPhone(text: String) {
        logInRequest.phoneOrEmail = text
    }
       
       func setPassword(password: String) {
        logInRequest.password = password
       }
       
       func logIn() {
        self.view?.changeState(state: .loading)
        self.interactor?.logIn(logInRequest: logInRequest)
       }

}

extension LogInPresenter : InteractorToPresenterLogInProtocol {
    func userLoggedInSuccessfully(user : User) {
        self.view?.changeState(state: .ready)
        
        if user.addressList?.count == 0 {
            self.router?.openAddAddress(from: self.view)
        }else{
            Utils.openHomeScreen()
        }
        
        
    }
    
    func userFailedToLoggedIn(error: String) {
        self.view?.changeState(state: .error(error))
    }
    
    
}

