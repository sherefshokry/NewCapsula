//
//  MainRegisterProtocols.swift
//  Capsula
//
//  Created SherifShokry on 12/28/19.
//  Copyright © 2019 SherifShokry. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit

protocol ViewToPresenterMainRegisterProtocol: class {
    
    var view : PresenterToViewMainRegisterProtocol? {get set}
    var interactor : PresenterToIntetractorMainRegisterProtocol? {get set}
    var router : PresenterToRouterMainRegisterProtocol? {get set}
    func loginWithFacebook(token : String)
    func loginWithGoogle(token : String)
    func loginWithTwitter(token : String, secretKey : String)
    func loginWithApple(name: String, token : String)

}

protocol PresenterToViewMainRegisterProtocol: class {
    func changeState(state  : State)
}

protocol PresenterToIntetractorMainRegisterProtocol: class {
    var presenter: InteractorToPresenterMainRegisterProtocol? { get set }
    func loginWithFacebook(token : String)
    func loginWithGoogle(token : String)
    func loginWithTwitter(token : String, secretKey : String)
    func loginWithApple(name: String, token : String)

}

protocol PresenterToRouterMainRegisterProtocol: class  {
    static func createModule(isDeliveryMan : Bool) -> UIViewController
    func openCompleteProfile(from sourceView: PresenterToViewMainRegisterProtocol?, user : User,fromApple : Bool)
    func openAddAddress(from sourceView: PresenterToViewMainRegisterProtocol?)
    
}

protocol InteractorToPresenterMainRegisterProtocol: class {
    func loggedInSuccussfully(userResponse  : UserResponse)
    func failedToLogin(error : String)
}
